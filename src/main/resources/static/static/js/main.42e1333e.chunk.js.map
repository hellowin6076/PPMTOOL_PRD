{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","actions/commonActions.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","clearErrors","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","created_At","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","SecuredRoute","component","otherProps","render","prototype","PropTypes","object","isRequired","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.42e1333e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delte the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pe-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pe-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pe-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from \"react\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extratct token for res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set oure token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to oure securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ms-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ms-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import { GET_ERRORS } from \"./types\";\n\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: GET_ERRORS,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\nimport { clearErrors } from \"../../actions/commonActions\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"mb-3\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"d-grid\">\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-primary btn-block mt-4\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject, clearErrors })(\n  AddProject\n);\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { clearErrors } from \"../../actions/commonActions\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      created_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n      created_At,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n      created_At,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n      created_At: this.state.created_At,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdenifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    //Warning: `value` prop on `input` should not be null.\n                    //Consider using an empty string to clear the component or `undefined` for uncontrolled components.\n                    //위의 경고를 없애기위해 null 들어가는거 방지하기위해 || \"\" 를 추가\n                    value={this.state.start_date || \"\"}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date || \"\"}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"d-grid\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  getProject,\n  createProject,\n  clearErrors,\n})(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ms-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask =\n  (backlog_id, project_task, history) => async (dispatch) => {\n    try {\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\n      history.push(`/projectBoard/${backlog_id}`);\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    }\n  };\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask =\n  (backlog_id, pt_id, history) => async (dispatch) => {\n    try {\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n      dispatch({\n        type: GET_PROJECT_TASK,\n        payload: res.data,\n      });\n    } catch (err) {\n      history.push(\"/dashboard\");\n    }\n  };\n\nexport const updateProjectTask =\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\n    try {\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n      history.push(`/projectBoard/${backlog_id}`);\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    }\n  };\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_props } = this.props;\n\n    const tasks = project_tasks_props.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              //insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_props={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { clearErrors } from \"../../../actions/commonActions\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"0\",\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"mb-3\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <div className=\"d-grid\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask, clearErrors })(\n  AddProjectTask\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport { clearErrors } from \"../../../actions/commonActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: null,\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At,\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name : {this.state.projectIdentifier} | Project Task ID\n                : {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.summary,\n                      })}\n                      name=\"summary\"\n                      placeholder=\"Project Task summary\"\n                      value={this.state.summary}\n                      onChange={this.onChange}\n                    />\n                    {errors.summary && (\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                    ></textarea>\n                  </div>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"dueDate\"\n                      value={this.state.dueDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"priority\"\n                      value={this.state.priority}\n                      onChange={this.onChange}\n                    >\n                      <option value={0}>Select Priority</option>\n                      <option value={1}>High</option>\n                      <option value={2}>Medium</option>\n                      <option value={3}>Low</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"status\"\n                      value={this.state.status}\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Select Status</option>\n                      <option value=\"TO_DO\">TO DO</option>\n                      <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                      <option value=\"DONE\">DONE</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"d-grid\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  getProjectTask,\n  updateProjectTask,\n  clearErrors,\n})(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary me-5\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-success\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { clearErrors } from \"../../actions/commonActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <div className=\"d-grid\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-info btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser, clearErrors })(\n  Register\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"d-grid\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-info btn-block mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.prototype = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addprojectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}